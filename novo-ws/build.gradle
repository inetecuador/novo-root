apply plugin: "org.springframework.boot"

// Descomentar para generar war

configurations.all { configuration ->
    configuration.incoming.beforeResolve { resolvableDependencies ->
        resolvableDependencies.dependencies.each { dependency ->
            dependency.exclude group: "org.apache.logging.log4j", module: "log4j-api"
            dependency.exclude group: "org.slf4j", module: "slf4j-log4j12"
            dependency.exclude group: "org.slf4j", module: "slf4j-api"
            dependency.exclude group: "ch.qos.logback", module: "logback-classic"
        }
    }
}

springBoot {
    buildInfo ()
}
dependencies {
    api project(":novo-core")
    api project(":novo-vo")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation('org.hibernate.validator:hibernate-validator')
    implementation('org.hibernate:hibernate-entitymanager')

    // Validator
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-autoconfigure'

    // Loggin
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Data
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt'

    // Documentation API
    implementation 'org.springdoc:springdoc-openapi-ui'

    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'commons-beanutils:commons-beanutils'
    implementation 'org.keycloak:keycloak-spring-boot-starter'

    //Para generar war
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    providedRuntime group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'


}

bootRun {
    main = 'com.base.BaseApplication'
}